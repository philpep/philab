#   ____  _     _ _       _     
#  |  _ \| |__ (_) | __ _| |__  
#  | |_) | '_ \| | |/ _` | '_ \ 
#  |  __/| | | | | | (_| | |_) |
#  |_|   |_| |_|_|_|\__,_|_.__/ 
#                               
#
# Philab est un logiciel de calcul matriciel
# minimaliste. Le moteur de calcul est codé en
# fortran et l'interface en C. Toutes fois l'interface
# est optionnelle et on peut executer toutes les
# opérations directement avec le programme fortran.
#
# J'ai codé philab en utilisant le gestionnaire de
# version git. Pour voir les différentes étapes du
# code, il y a un gitweb ici : http://git.philpep.ath.cx/philab.git
# Pour recuperer la dernière version de philab :
# git clone git://philpep.ath.cx/philab.git
#
# Attention, le serveur est hébergé (pour le moment) sur mon petit
# portable qui n'est pas allumé 24h/24 :-) , donc il
# est possible que philpep.ath.cx soit parfois down.
#
# Contact : Philippe Pepiot <philux@tuxfamily.org>
# 			    <philippe.pepiot@gmail.com>
# 			    <mapi13@cict.fr>
# (Je n'ai pas encore installé mon serveur de mail :-)
#
# Toute partie du code peut être librement modifiée et
# redistribuée suivant les termes de la licence BSD que voici :
#

# Copyright (c) 1998, Regents of the University of California
# All rights reserved.
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the University of California, Berkeley nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#
#
#
# Compilation :
# Munissez vous d'un shell confortable (J'entend par
# là que /bin/sh doit être un lien vers un shell
# valable bash, dash ou zsh sont largement suffisants).
# Et executez le script de configuration :
# ./configure
#
# Cette commande générera le Makefile qui va bien dans
# le repertoire courant.
# Ensuite compilez :
# make
#
# Et executez :
# ./philab
#
# La commande help permet d'avoir un rapide descriptif
# de ce qu'il est possible de faire avec philab.
#
#
# Des matrices d'exemples sont dans examples/
# Il y a un format de matrice a respecter :
# Pour les matrices creuse :
# 	- 1ère ligne : C
# 	- 2ème ligne : nombre d'élléments non nuls
# 	- Enuite renter les données sous la forme
# 	  num_ligne num_colonne valeur,  par exemple '2 3 5'
# 	  veut dire qu'il y a un 5 à la 2ème ligne 3ème colonne
#
# Pour les matrices entières :
# 	- 1ère ligne : I (pour Integer)
# 	- 2ème ligne : les dimensions de la matrices par exemple
# 	  '2 3' veut dire une matrice a 2 lignes et 3 colonnes
# 	- Ensuites les valeurs lignes par ligne. Exemple '1 2 3'
#
#
#
# Pour utiliser le programme sans l'interface il faut le lancer comme ceci :
# ./runtime fonction fichier_matrices
